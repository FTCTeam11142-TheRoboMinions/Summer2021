#BlueJ class context
comment0.target=Car_Ishika
comment0.text=\n\ You\ are\ a\ car\ manufacturer\ and\ you\ have\ to\ keep\ track\ of\ your\ inventory.\ You\ go\ to\ your\ best\ programmer,\ you,\ and\ ask\ them\ to\ \n\ make\ a\ program\ that\ accomplishes\ all\ of\ this\n\ \n\ CAR\ Class\n\ \ \ \ \ SHould\ have\ ability\ to\ store\ information\ about\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ car\ make\ (String),\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ release\ year(int),\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ number\ of\ such\ cars\ in\ inventory(int),\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ avg\ market\ price\ for\ each\ car(double)\n\ \ \ \ \ Create\ Getters\ for\ each\ instance\ variable\ and\ a\ Setter\ for\ the\ number\ of\ cars\ in\ inventory.\n\ \ \ \ \n\ \ \ \ \ CarInventory\ Class\n\ \ \ \ \ \ \ \ No\ need\ to\ accept\ input\ from\ the\ user.\ Create\ two\ such\ objcets,\ naming\ the\ cars\ whatever\ you\ want\ and\ fill\ whatever\ information\ you\ want.\n\ \ \ \ \ \ \ \ Output\ atleast\ two\ instance\ variables,\ one\ of\ which\ should\ be\ num\ cars\ in\ inventory.\ Update\ the\ number\ of\ cars\ for\ one\ of\ the\ cars\ aNd\ keep\ the\ other\ one\ same.\n\ \ \ \ \ \ \ \ OUtput\ the\ Num\ cars\ again.\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ Rules\:\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ Consistency\ in\ bracket\ placement\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ Have\ variable\ names\ that\ a\ third\ person\ can\ easily\ understand\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ Leave\ comments\ and\ be\ prepared\ to\ explain\ our\ code.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ IF\ YOU\ WANT\ PRACTICE\ FOR\ EVERYHING\ THAT\ I\ TAUGH\ IN\ CLASS\ THEN\ DO\ THIS\ PORTION\ ELSE\ DONT\ EVEN\ READ\ ***********************\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Make\ another\ Class\ called\ IndividualCar.\ This\ should\ have\ all\ the\ information\ as\ he\ Car\ Class\ above\ but\ a\ few\ aditional\ things.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ IT\ shoud\ have\ car\ mileage,\ amount\ of\ fuel\ in\ the\ car(in\ miles\ i.e.\ how\ many\ more\ miles\ can\ the\ car\ run),\ miles\ run,\ and\ avg\ speed.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ It\ should\ have\ a\ drive\ method\ that\ takes\ in\ to\ input\ paramters,\ avg\ speed\ and\ time\ driven\ for.\ Then\ caculate\ how\ many\ miles\ the\ car\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ was\ driven\ for.\ Then\ make\ a\ decision\ based\ on\ this\:\ If\ avg\ speed\ <\ 20,\ Mileage\ \=\ 1.2*Mileage\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ avg\ speed\ <\ 40,\ Mileage\ \=\ 1.1*Mileage\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ avg\ speed\ <\ 60,\ Mileage\ \=\ Mileage\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ else\ Mileage\ \=\ 0.8\ *\ Mileage.\n\ \ \ \ \ \ \ \ \ \ \ \ \ Once\ you\ know\ the\ mileage,\ calculate\ how\ many\ miles\ of\ fuel\ is\ left\ in\ the\ car\ and\ update\ the\ varaible.\ Update\ the\ average\ speed\ variable\n\ \ \ \ \ \ \ \ \ \ \ \ \ by\ averaging\ the\ last\ speed\ and\ the\ current\ speed.\ Keep\ asking\ the\ user\ if\ they\ drove\ the\ car\ some\ more\ and\ keep\ doing\ this\ if\ they\ did.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ \ Make\ a\ class\ called\ Driver\ and\ show\ that\ all\ the\ methods\ work\ an\ test\ it\ for\ yourself.\ \n\ \ \ \ \ \ \ \ \n
comment1.params=carMake\ releaseYear\ numberCars\ marketPrice
comment1.target=Car_Ishika(java.lang.String,\ int,\ int,\ double)
comment2.params=
comment2.target=java.lang.String\ getcarMake()
comment3.params=
comment3.target=int\ getreleaseYear()
comment4.params=
comment4.target=int\ getnumberCars()
comment5.params=
comment5.target=double\ getmarketPrice()
numComments=6
